apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime
  namespace: apps
  labels:
    app: uptime
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime
  template:
    metadata:
      labels:
        app: uptime
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
      - name: uptime
        image: louislam/uptime-kuma:1.23.13
        ports:
        - containerPort: 3001
        volumeMounts:
        - name: uptime-data
          mountPath: /app/data
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 20
      volumes:
      - name: uptime-data
        persistentVolumeClaim:
          claimName: uptime-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uptime-pvc
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: uptime
  namespace: apps
  labels:
    app: uptime
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
  selector:
    app: uptime
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-ingress
  namespace: apps
spec:
  ingressClassName: traefik
  rules:
  - host: uptime.sotools.cc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime
            port:
              number: 80
